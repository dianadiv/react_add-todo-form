{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","todosWithUser","userId","userForTodo","usersFromServer","find","App","useState","allTodos","setAllTodos","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","action","method","onSubmit","event","newTodo","preventDefault","Math","max","htmlFor","type","placeholder","value","onChange","target","onBlur","disabled","ReactDOM","render","document","getElementById"],"mappings":"qOAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4B,OCrDEC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKF,OAA7C,SACGE,EAAKJ,QCCCO,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,0BACE,UAASA,EAAKT,GACdM,UAAWI,IACT,eAAgB,CAAE,sBAAuBD,EAAKE,YAHlD,UAME,oBAAIL,UAAU,kBAAd,SACGG,EAAKG,QAGR,cAAC,EAAD,CAAUP,KAAMI,EAAKJ,WCfdQ,EAA2B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzC,OACE,yBAASR,UAAU,WAAnB,SAEGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKT,UCFdgB,ECXS,CACb,CACEhB,GAAI,EACJY,MAAO,qBACPD,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,GACJY,MAAO,kBACPD,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,EACJY,MAAO,qCACPD,WAAW,EACXM,OAAQ,IDN0BF,KAAI,SAAAN,GACxC,IAAMS,EAAcC,EAAgBC,MAAK,SAAAf,GAAI,OAAII,EAAKQ,SAAWZ,EAAKL,MAEtE,OAAO,2BACFS,GADL,IAEEJ,KAAMa,OAIGG,EAAM,WACjB,MAAgCC,mBAASN,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEA,EAA0BF,mBAAS,IAAnC,mBAAOV,EAAP,KAAca,EAAd,KACA,EAA0CH,oBAAS,GAAnD,mBAAOI,EAAP,KAAsBC,EAAtB,KAEA,EAA4BL,mBAAS,GAArC,mBAAOL,EAAP,KAAeW,EAAf,KACA,EAA4CN,oBAAS,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KAwDA,OACE,sBAAKxB,UAAU,2BAAf,UACE,oBAAIA,UAAU,QAAd,2BAEA,uBACEyB,OAAO,aACPC,OAAO,OACPC,SA5Be,SAACC,GA7BH,IAACC,EAJFnC,EAyBAc,GAShBoB,EAAME,iBAENT,GAAkBf,GAClBkB,GAAmBb,GAEdL,GAAUK,KAnCGkB,EAuCP,CACTnC,IAnBcc,EAmBDS,EAlBDc,KAAKC,IAAL,MAAAD,KAAI,YACbvB,EAAMC,KAAI,SAAAN,GAAI,OAAIA,EAAKT,QAGb,GAebY,QACAD,WAAW,EACXM,SACAZ,MAhDcL,EAgDCiB,EA/CVE,EAAgBC,MAAK,SAAAf,GAAI,OAAIA,EAAKL,KAAOA,OAIhDwB,GAAY,SAAAV,GAAK,4BAAQA,GAAR,CAAeqB,OAchCV,EAAS,IACTG,EAAU,GACVD,GAAiB,GACjBG,GAAkB,KAoChB,UAKE,sBAAKxB,UAAU,QAAf,UACE,uBAAOiC,QAAQ,QAAQjC,UAAU,QAAjC,qBACA,uBACEkC,KAAK,OACLlC,UAAWI,IACT,mBAAoB,CAAE,YAAagB,IAErC,UAAQ,aACR1B,GAAG,QACHyC,YAAY,gBACZC,MAAO9B,EACP+B,SAlEgB,SAACT,GACzBT,EAASS,EAAMU,OAAOF,OACtBf,GAAiB,IAiETkB,OAAQ,kBAAMlB,GAAkBf,MAGjCc,GACC,sBAAMpB,UAAU,uBAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,uBAAOiC,QAAQ,UAAUjC,UAAU,QAAnC,oBAEA,qBAAKA,UAAWI,IACd,oBAAqB,CAAE,YAAamB,IADtC,SAIE,yBACE,UAAQ,aACR7B,GAAG,UACH0C,MAAOzB,EACP0B,SAjFe,SAACT,GAC1BN,GAAWM,EAAMU,OAAOF,OACxBZ,GAAkB,IAgFRe,OAAQ,kBAAMf,GAAmBb,IALnC,UAOE,wBAAQyB,MAAM,IAAII,UAAQ,EAA1B,2BAEC3B,EAAgBJ,KAAI,SAAAV,GAAI,OACvB,wBAAQqC,MAAOrC,EAAKL,GAApB,SAAuCK,EAAKJ,MAAfI,EAAKL,YAKvC6B,GACC,sBAAMvB,UAAU,uBAAhB,qCAIJ,wBACEkC,KAAK,SACL,UAAQ,eACRlC,UAAU,oBAHZ,oBASF,cAAC,EAAD,CACEQ,MAAOS,QEjJfwB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.48911ac1.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props{\n  user: User,\n}\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todos } from '../../types/Todos';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props{\n  todo: Todos,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo box', { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todos } from '../../types/Todos';\n\ninterface Props{\n  todos: Todos[],\n}\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todos } from './types/Todos';\nimport { User } from './types/User';\n\nconst todosWithUser = todosFromServer.map(todo => {\n  const userForTodo = usersFromServer.find(user => todo.userId === user.id);\n\n  return {\n    ...todo,\n    user: userForTodo as User,\n  };\n});\n\nexport const App = () => {\n  const [allTodos, setAllTodos] = useState(todosWithUser);\n\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const findUser = (id: number) => {\n    return usersFromServer.find(user => user.id === id) as User;\n  };\n\n  const addNewTodo = (newTodo: Todos) => {\n    setAllTodos(todos => [...todos, newTodo]);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const resetFields = () => {\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const getNewId = (todos: Todos[]) => {\n    const maxId = Math.max(\n      ...todos.map(todo => todo.id),\n    );\n\n    return maxId + 1;\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    addNewTodo({\n      id: getNewId(allTodos),\n      title,\n      completed: false,\n      userId,\n      user: findUser(userId),\n    });\n\n    resetFields();\n  };\n\n  return (\n    <div className=\"container is-max-desktop\">\n      <h1 className=\"title\">Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\" className=\"label\">Title: </label>\n          <input\n            type=\"text\"\n            className={classNames(\n              'input is-success', { 'is-danger': hasTitleError },\n            )}\n            data-cy=\"titleInput\"\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n            onBlur={() => setHasTitleError(!title)}\n          />\n\n          {hasTitleError && (\n            <span className=\"error help is-danger\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user-id\" className=\"label\">User: </label>\n\n          <div className={classNames(\n            'select is-success', { 'is-danger': hasUserIdError },\n          )}\n          >\n            <select\n              data-cy=\"userSelect\"\n              id=\"user-id\"\n              value={userId}\n              onChange={handleUserIdChange}\n              onBlur={() => setHasUserIdError(!userId)}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </div>\n\n          {hasUserIdError && (\n            <span className=\"error help is-danger\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button is-success\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={allTodos}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport 'bulma';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}